version: '3.8'

services:
  temporal:
    container_name: temporal
    environment:
      - DB=sqlite
      - NUM_HISTORY_SHARDS=3
      - SKIP_SCHEMA_SETUP=true
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    image: temporalio/auto-setup:1.21.4
    networks:
      - agentex-network
    ports:
      - 7233:7233
    volumes:
      - ./temporal/dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./temporal/config_template.yaml:/etc/temporal/config/config_template.yaml

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.21.4
    networks:
      - agentex-network
    stdin_open: true
    tty: true

  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.17.2
    networks:
      - agentex-network
    ports:
      - 8080:8080

  redis:
    container_name: redis
    image: redis/redis-stack-server:7.2.0-v6
    networks:
      - agentex-network  # Redis should also be on the same network
    ports:
      - 16379:6379

  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: agentex
    ports:
      - "5432:5432"
    networks:
      - agentex-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    user: postgres

  agentex-backend:
    container_name: agentex-backend
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ENV=development
      - UVICORN_PORT=5003
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/agentex
    ports:
      - "5003:5003"
    volumes:
      - .:/app
    depends_on:
      - temporal
      - redis
      - postgres
    networks:
      - agentex-network
    command: >
      bash -c "
      until pg_isready -h postgres -p 5432; do
        echo 'Waiting for PostgreSQL main...';
        sleep 2;
      done &&
      pushd database/migrations &&
      alembic upgrade head &&
      popd &&
      uvicorn agentex.api.app:app --host 0.0.0.0 --port 5003 --reload
      "


volumes:
  postgres-data:

networks:
  agentex-network:
    driver: bridge
    name: agentex-network
